#include<iostream>
#include<vector>
#include<queue>
using namespace std;

// 1차 복습 풀이시간 : 3분 내 

/*

<74. 최소힙(priority_queue : 우선순위 큐)>

최소힙은 완전이진트리로 구현된 자료구조입니다.
그 구성은 부모 노드값이 왼쪽자식과 오른쪽 자식노드의 값보다 작게 트리를 구성하는 것입니다.

그렇게 하면 트리의 루트(root)노드는 입력된 값들 중 가장 작은 값이 저장되어 있습니다.
예를 들어 5 3 2 1 4 6 7순으로 입력되면 최소힙 트리는 아래와 같이 구성됩니다.


				1
		2				3
	5		4		6		7


최소힙 자료를 이용하여 다음과 같은 연산을 하는 프로그램을 작성하세요.

1) 자연수가 입력되면 최소힙에 입력한다.
2) 숫자 0 이 입력되면 최소힙에서 최솟값을 꺼내어 출력한다.
(출력할 자료가 없으면 -1를 출력한다.)
3) -1이 입력되면 프로그램 종료한다.

=============================================================================

▶ 입력설명
첫 번째 줄부터 숫자가 입력된다. 
입력되는 숫자는 100,000개 이하이며 각 숫자의 크기는 정수형 범위에 있다.

▶ 출력설명
2) 연산을 한 결과를 보여준다.

=============================================================================

▶ 입력예제
5
3
6
0
5
0
2
4
0
-1

▶ 출력예제
3
5
2

*/

int main()
{
	// 강의 풀이 

	// 자료를 삽입 시 -를 곱해서 음수로 변경하면 본래 더 작았던 수가 루트 노드로 가게 됨. 
	// 이를 이용하여 최소힙으로 구성 후 원소값을 받아올 때는 다시 -를 곱하여 원래의 값으로 변경. 

	int a;

	priority_queue<int> pQ;

	while (true)
	{
		cin >> a;

		if (a == -1) break;

		if (a == 0)
		{
			if (pQ.empty()) cout << -1 << endl;
			else
			{
				cout << -pQ.top() << endl;
				pQ.pop();
			}
		}
		else pQ.push(-a);
	}

	return 0;
}