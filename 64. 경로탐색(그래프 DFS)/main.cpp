#include<iostream>
using namespace std;

// 1차 복습 풀이시간 : 10분 30초 내 (복습 필요)

/*

<64. 경로탐색(그래프 DFS)>

방향그래프가 주어지면 1번 정점에서 N번 정점으로 가는 
모든 경로의 가지 수를 출력하는 프로그램을 작성하세요.

아래 그래프에서 1번 정점에서 5번 정점으로 가는 가지 수는

1 2 3 4 5
1 2 5
1 3 4 2 5
1 3 4 5
1 4 2 5
1 4 5

총 6 가지입니다.

=============================================================================

▶ 입력설명
첫째 줄에는 정점의 수 N(1 <= N <= 20)와 간선의 수 M가 주어진다. 
그 다음부터 M줄에 걸쳐 연결정보가 주어진다.

▶ 출력설명
총 가지수를 출력한다.

=============================================================================

▶ 입력예제
5 9
1 2
1 3
1 4
2 1
2 3
2 5
3 4
4 2
4 5

▶ 출력예제
6

*/

int map[30][30]{ 0 }, ch[30]{ 0 }, res = 0, n;

/*
void DFS(int v)
{
	if (v == n)
	{
		res++;
	}
	else
	{
		for (int i = 1; i <= n; i++)
		{
			if (map[v][i] == 1 && ch[i] == 0)
			{
				ch[i] = 1;
				DFS(i);
				ch[i] = 0;
			}
		}
	}
}
*/

void DFS(int v)
{
	if (v == n)
	{
		res++;
	}
	else
	{
		for (int i = 1; i <= n; i++)
		{
			if (map[v][i] != 1 || ch[i] != 0) continue;

			ch[i] = 1;
			DFS(i);
			ch[i] = 0;
		}
	}
}

int main()
{
	// 강의 풀이 

	int m, a, b;

	cin >> n >> m;

	for (int i = 0; i < m; i++)
	{
		cin >> a >> b;

		map[a][b] = 1;
	}

	ch[1] = 1;
	DFS(1);

	cout << res << endl; 

	return 0;
}