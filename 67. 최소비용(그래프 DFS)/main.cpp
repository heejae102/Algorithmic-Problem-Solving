#include<iostream>
using namespace std;

/*

<67. 최소비용(DFS : 인접행렬)>

가중치 방향그래프가 주어지면 1번 정점에서 N번 정점으로 가는 
최소비용을 출력하는 프로그램을 작성하세요.

=============================================================================

▶ 입력설명
첫째 줄에는 정점의 수 N(1 <= N <= 20)와 간선의 수 M가 주어진다. 
그 다음부터 M줄에 걸쳐 연결정보가 주어진다.

▶ 출력설명
최소비용을 출력합니다.

=============================================================================

▶ 입력예제
5 8
1 2 12
1 3 6
1 4 10
2 3 2
2 5 2
3 4 3
4 2 2
4 5 5

▶ 출력예제
13

*/

int arr[21][21]{ 0 }, ch[21]{ 0 };
int n, min = numeric_limits<int>::max();

void DFS(int v, int sum)
{
	if (v == n)
	{
		if (sum < min) min = sum;
	}
	else
	{
		for (int i = 1; i <= n; i++)
		{
			if (arr[v][i] != 0 && ch[i] == 0)
			{
				ch[i] = 1;
				DFS(i, sum + arr[v][i]);
				ch[i] = 0;
			}
		}
	}
}

int main()
{
	// 최초의 풀이 (강의 풀이와 동일) 

	int m, a, b, c;

	cin >> n >> m;

	for (int i = 0; i < m; i++)
	{
		cin >> a >> b >> c;
		arr[a][b] = c;
	}

	ch[1] = 1;
	DFS(1, 0);

	cout << min << endl;

	return 0;
}