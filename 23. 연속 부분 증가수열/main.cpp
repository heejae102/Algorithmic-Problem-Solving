#include<stdio.h>
#include<iostream>
#include<vector>
using namespace std; 

// 1차 복습 풀이시간 : 12분 

/*

<23. 연속 부분 증가수열>

N개의 숫자가 나열된 수열이 주어집니다. 
이 수열 중 연속적으로 증가하는 부분 수열의 
최대길이를 구하여 출력하는 프로그램을 작성하세요.

만약 N = 9 이고,
5 7 3 3 12 12 13 10 11 이면
“3 3 12 12 13” 부분이 최대 길이 증가수열이므로
그 길이인 5을 출력합니다. 

값이 같을 때는 증가하는 걸로 생각합니다.

=============================================================================

▶ 입력설명
첫 줄에 자연수의 개수 N(5 <= N <= 100,000)이 주어집니다.
두 번째 줄에 N개의 숫자열이 주어집니다. 각 숫자는 100,000이하의 자연수입니다.

▶ 출력설명
최대 부분 증가수열의 길이를 출력하세요.

=============================================================================

▶ 입력예제
9
5 7 3 3 12 12 13 10 11

▶ 출력예제
5

*/

int main()
{
	// 최초의 풀이 

	/*
	// 첫 줄에 자연수의 개수 N(5 <= N <= 100,000)이 주어집니다.
	// 두 번째 줄에 N개의 숫자열이 주어집니다. 각 숫자는 100,000이하의 자연수입니다.

	int n, preNum, count = 0, max = 0;
	
	cin >> n;

	vector<int> num(n);

	for (int i = 0; i < n; i++)
	{
		cin >> num[i];
	}

	// 검사
	// 값이 같을 때는 증가하는 것으로 여긴다. 
	preNum = num[0];

	for (int i = 1; i < n; i++)
	{
		if (num[i] < preNum)
		{
			count = 0;
		}
		else
		{
			count++;
			if (count > max) max = count;
		}

		preNum = num[i];
	}

	// 최대 부분 증가수열의 길이를 출력하세요.
	// max 값은 증가수열의 첫 번째 값을 포함하지 않으므로 +1 
	printf("%d\n", max + 1);
	*/

	//============================================================================//

	// 강의 풀이 (입력받는 중에 바로 계산)

	// 첫 줄에 자연수의 개수 N(5 <= N <= 100,000)이 주어집니다.
	// 두 번째 줄에 N개의 숫자열이 주어집니다. 각 숫자는 100,000이하의 자연수입니다.

	// 수열 길이 계산 시 자기 자신을 포함해야 하므로 count, max를 1로 초기화. 
	int n, preNum, curNum, count = 1, max = 1; 

	cin >> n;

	cin >> preNum;

	for (int i = 1; i < n; i++)
	{
		cin >> curNum;

		if (preNum > curNum)
		{
			// 수열 길이 계산 시 자기 자신을 포함해야 하므로 count를 1로 초기화. 
			count = 1;
		}
		else
		{
			count++;
			if (count > max) max = count;
		}

		preNum = curNum;
	}

	printf("%d\n", max);

	return 0;
}