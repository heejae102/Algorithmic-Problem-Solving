#include<iostream>
#include<vector>
using namespace std;

/*

<61. 특정 수 만들기(DFS : MS 인터뷰)>

N개의 원소로 구성된 자연수 집합이 주어지면, 
집합의 원소와 ‘+’, ‘-’ 연산을 사용하여 특정수인 M을 만드는 경우가 
몇 가지 있는지 출력하는 프로그램을 작성하세요. 

각 원소는 연산에한 번만 사용합니다.

예를 들어 {2, 4, 6, 8}이 입력되고, M=12이면
2+4+6=12
4+8=12
6+8-2=12
2-4+6+8=12
로 총 4가지의 경우가 있습니다. 
만들어지는 경우가 존재하지 않으면 -1를 출력한다.

=============================================================================

▶ 입력설명
첫 번째 줄에 자연수 N(1 <= N <= 10)와 M(1 <= M <= 100) 주어집니다.
두 번째 줄에 집합의 원소 N개가 주어진다. 각 원소는 중복되지 않는다.

▶ 출력설명
첫 번째 줄에 경우의 가지 수를 출력하세요. 
만들어지는 경우가 존재하지 않으면 -1를 출력하세요. 

=============================================================================

▶ 입력예제1
4 12
2 4 6 8

▶ 출력예제1
4

*/

int n, ch[11]{ 0 }, arr[11]{ 0 };
vector<int> sum;

void DFS(int x)
{
	if (x == n)
	{
		int count = 0;

		for (int i = 0; i < n; i++)
		{
			if (ch[i] == 1) count += arr[i];
		}

		sum.push_back(count);
	}
	else
	{
		ch[x] = 1;
		DFS(x + 1);
		ch[x] = 0;
		DFS(x + 1);
	}
}

int main()
{
	// 최초의 풀이 (하나의 테스트 케이스에 대해 오류 발생)

	cin >> n;

	for (int i = 0; i < n; i++)
	{
		cin >> arr[i];
	}

	DFS(0);

	for (int i = 0; i < sum.size(); i++)
	{
		for (int j = 0; j < sum.size(); j++)
		{
			if (i != j && sum[i] == sum[j])
			{
				cout << "YES" << endl;
				cout << sum[i] << endl;
				return 0;
			}
		}
	}

	cout << "NO" << endl;

	//============================================================================//

	// 강의 풀이 

	int n;
	cin >> n;



	return 0;
}